"""
32412kb 40ms
끝자리가 0이나 9이면 무조건 -1개 진행하기
길이가 1인 계단수: 1~9
9
길이가 2인 계단수:
10
12,23 34 45 56 67 78 89
21,32,43,54,65,76,87,98
0: 1
1: 1, 9:1
2~8:2
개수: 7*2 + 3 = 17

길이가 3인 계단수
1_:2 *2(-1)<0,2> -> 121, 123, 101 (1,1,3)
2_:2 *2<1,3> => 232, 234, 210, 212 (0,2,2,4)
3_:2 *2<2,4> => 323, 321, 343, 345 (1,3,3,5)
... 2*2
8_:2 *2(-1)<7,9> => 876, 878, 898 (6,8,8)
9_: 1 *2 => 987 989 (7,9)
17*2 -2 = 32

끝자리 숫자를 계속 업데이트 하면서 개수 변경해주면서 세기
마지막에 해당하는 n에 해당하는 모든 수 뽑아내기
"""

n = int(input())
digits = [0] + [1]*9 # 이전 끝자리수 몇개인지 파악하기
for length in range(2,n+1): # 증식되는 길이
    # 마지막 자릿수의 개수를 세기
    # length = 1이면
    # 0인것들 모두 1로 옮기고
    # 1인것들 0,2로 ... 9인 것들은 모두 8로
    new_digits = [0]*10
    for i in range(10): # 0~9
        if i == 0:
            new_digits[1]+=digits[0]
        elif i == 9:
            new_digits[8]+=digits[9]
        else:
            new_digits[i+1]+=digits[i]
            new_digits[i-1]+=digits[i]
        #print(f"i가{i} ",new_digits)
    digits = new_digits

print(sum(digits)%int(1e9))